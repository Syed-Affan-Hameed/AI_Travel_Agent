import React, { useState } from 'react'
import { Card } from './components/ui/card'
import { Button } from './components/ui/button'
import { Input } from './components/ui/input'
import { Tabs, TabsContent, TabsList, TabsTrigger } from './components/ui/tabs'
import { MinusCircle, PlusCircle, Send } from 'lucide-react'
import axios from 'axios'

function App() {
  const [formData, setFormData] = useState({
    travelers: 1,
    flyingFrom: 'New York City',
    flyingTo: 'Paris',
    fromDate: '2023-11-24',
    toDate: '2023-12-05',
    budget: '$5000'
  })
  const [tripDetails, setTripDetails] = useState('');
  const [activeTab, setActiveTab] = useState('plan');
  const [userMessage, setUserMessage] = useState('');

  const handleInputChange = (e:any) => {
    const { name, value } = e.target
    setFormData(prev => ({ ...prev, [name]: value }))
  }
  const handleUserMessage = (e:any) => {
    const { value } = e.target;
    setUserMessage(value);
  }

  const handlePlanTrip = async () => {
    try {
      const planMyTripRequest = {
        userPrompt: `I want to plan a trip for ${formData.travelers} people from ${formData.flyingFrom} to ${formData.flyingTo} from ${formData.fromDate} to ${formData.toDate} with a budget of ${formData.budget}.`
      };
       const response = await axios.post('http://localhost:5009/api/v1/travelAgent/planMytrip', planMyTripRequest);
       console.log(response.data)
       setTripDetails(response.data)
      setActiveTab('details')
    } catch (error) {
      console.error('Error planning trip:', error)
      // Handle error (e.g., show error message to user)
    }
  }

  const handlePlanTripConversation = async () => {
    
    try {
      const planMyTripRequest = {
        userPrompt: userMessage
      };
       const response = await axios.post('http://localhost:5009/api/v1/travelAgent/planMytrip', planMyTripRequest);
       console.log(response.data)
       setTripDetails(response.data)
      setActiveTab('details')
    } catch (error) {
      console.error('Error planning trip:', error)
      // Handle error (e.g., show error message to user)
    }
  }


  return (
    <div className="min-h-screen bg-gray-50 flex items-center justify-center p-4">
      <Card className="w-full max-w-md overflow-hidden">
        <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full">
          <TabsList className="grid w-full grid-cols-2">
            <TabsTrigger value="plan">Plan Trip</TabsTrigger>
            <TabsTrigger value="details" disabled={!tripDetails}>
              Trip Details
            </TabsTrigger>
          </TabsList>

          <TabsContent value="plan" className="p-6 space-y-6">
            <div className="space-y-2">
              <label className="block text-sm font-medium">Number of travellers</label>
              <div className="flex items-center justify-between rounded-full border p-2">
                <Button
                  variant="ghost"
                  size="icon"
                  onClick={() => setFormData(prev => ({ ...prev, travelers: Math.max(1, prev.travelers - 1) }))}
                >
                  <MinusCircle className="h-4 w-4" />
                </Button>
                <span className="font-medium">{formData.travelers}</span>
                <Button
                  variant="ghost"
                  size="icon"
                  onClick={() => setFormData(prev => ({ ...prev, travelers: prev.travelers + 1 }))}
                >
                  <PlusCircle className="h-4 w-4" />
                </Button>
              </div>
            </div>

            <div className="space-y-2">
              <label className="block text-sm font-medium">Flying from</label>
              <Input 
                name="flyingFrom" 
                value={formData.flyingFrom} 
                onChange={handleInputChange} 
                className="rounded-full" 
              />
            </div>

            <div className="space-y-2">
              <label className="block text-sm font-medium">Flying to</label>
              <Input 
                name="flyingTo" 
                value={formData.flyingTo} 
                onChange={handleInputChange} 
                className="rounded-full" 
              />
            </div>

            <div className="space-y-2">
              <label className="block text-sm font-medium">From Date</label>
              <Input 
                type="date" 
                name="fromDate" 
                value={formData.fromDate} 
                onChange={handleInputChange} 
                className="rounded-full" 
              />
            </div>

            <div className="space-y-2">
              <label className="block text-sm font-medium">To Date</label>
              <Input 
                type="date" 
                name="toDate" 
                value={formData.toDate} 
                onChange={handleInputChange} 
                className="rounded-full" 
              />
            </div>

            <div className="space-y-2">
              <label className="block text-sm font-medium">Budget</label>
              <Input 
                name="budget" 
                value={formData.budget} 
                onChange={handleInputChange} 
                className="rounded-full" 
              />
            </div>

            <Button 
              className="w-full rounded-full bg-emerald-400 hover:bg-emerald-500" 
              onClick={handlePlanTrip}
            >
              Plan my Trip!
            </Button>
          </TabsContent>

          <TabsContent value="details" className="p-6">
            <div className="space-y-4">
              <div className="flex items-start space-x-4">
                <div className="w-8 h-8 rounded-full bg-blue-500 flex items-center justify-center text-white">
                  AI
                </div>
                <div className="flex-1 bg-blue-100 rounded-lg p-4">
                  <p className="text-sm text-gray-800 whitespace-pre-wrap">{tripDetails}</p>
                </div>
              </div>
              <div className="flex items-center space-x-2">
                <Input 
                  placeholder="Ask a question about your trip..." 
                  className="flex-1 rounded-full"
                />
                <Button size="icon" className="rounded-full">
                  <Send className="h-4 w-4" />
                </Button>
              </div>
            </div>
          </TabsContent>
        </Tabs>
      </Card>
    </div>
  )
}

export default App

